<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="life.hblg.community.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="life.hblg.community.model.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="topic_id" jdbcType="INTEGER" property="topicId" />
    <result column="commentor_id" jdbcType="INTEGER" property="commentorId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="gmt_create" jdbcType="BIGINT" property="gmtCreate" />
    <result column="gmt_modify" jdbcType="BIGINT" property="gmtModify" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="life.hblg.community.model.Comment">
    <result column="comment_content" jdbcType="LONGVARCHAR" property="commentContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, topic_id, commentor_id, type, like_count, gmt_create, gmt_modify, comment_count
  </sql>
  <sql id="Blob_Column_List">
    comment_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="life.hblg.community.model.CommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="life.hblg.community.model.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="life.hblg.community.model.CommentExample">
    delete from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="life.hblg.community.model.Comment">
    insert into comment (id, topic_id, commentor_id, 
      type, like_count, gmt_create, 
      gmt_modify, comment_count, comment_content
      )
    values (#{id,jdbcType=INTEGER}, #{topicId,jdbcType=INTEGER}, #{commentorId,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{likeCount,jdbcType=INTEGER}, #{gmtCreate,jdbcType=BIGINT}, 
      #{gmtModify,jdbcType=BIGINT}, #{commentCount,jdbcType=INTEGER}, #{commentContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="life.hblg.community.model.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="topicId != null">
        topic_id,
      </if>
      <if test="commentorId != null">
        commentor_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModify != null">
        gmt_modify,
      </if>
      <if test="commentCount != null">
        comment_count,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="topicId != null">
        #{topicId,jdbcType=INTEGER},
      </if>
      <if test="commentorId != null">
        #{commentorId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=BIGINT},
      </if>
      <if test="gmtModify != null">
        #{gmtModify,jdbcType=BIGINT},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="life.hblg.community.model.CommentExample" resultType="java.lang.Long">
    select count(*) from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.topicId != null">
        topic_id = #{record.topicId,jdbcType=INTEGER},
      </if>
      <if test="record.commentorId != null">
        commentor_id = #{record.commentorId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.likeCount != null">
        like_count = #{record.likeCount,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=BIGINT},
      </if>
      <if test="record.gmtModify != null">
        gmt_modify = #{record.gmtModify,jdbcType=BIGINT},
      </if>
      <if test="record.commentCount != null">
        comment_count = #{record.commentCount,jdbcType=INTEGER},
      </if>
      <if test="record.commentContent != null">
        comment_content = #{record.commentContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update comment
    set id = #{record.id,jdbcType=INTEGER},
      topic_id = #{record.topicId,jdbcType=INTEGER},
      commentor_id = #{record.commentorId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      like_count = #{record.likeCount,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=BIGINT},
      gmt_modify = #{record.gmtModify,jdbcType=BIGINT},
      comment_count = #{record.commentCount,jdbcType=INTEGER},
      comment_content = #{record.commentContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment
    set id = #{record.id,jdbcType=INTEGER},
      topic_id = #{record.topicId,jdbcType=INTEGER},
      commentor_id = #{record.commentorId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      like_count = #{record.likeCount,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=BIGINT},
      gmt_modify = #{record.gmtModify,jdbcType=BIGINT},
      comment_count = #{record.commentCount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="life.hblg.community.model.Comment">
    update comment
    <set>
      <if test="topicId != null">
        topic_id = #{topicId,jdbcType=INTEGER},
      </if>
      <if test="commentorId != null">
        commentor_id = #{commentorId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=BIGINT},
      </if>
      <if test="gmtModify != null">
        gmt_modify = #{gmtModify,jdbcType=BIGINT},
      </if>
      <if test="commentCount != null">
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="life.hblg.community.model.Comment">
    update comment
    set topic_id = #{topicId,jdbcType=INTEGER},
      commentor_id = #{commentorId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=BIGINT},
      gmt_modify = #{gmtModify,jdbcType=BIGINT},
      comment_count = #{commentCount,jdbcType=INTEGER},
      comment_content = #{commentContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="life.hblg.community.model.Comment">
    update comment
    set topic_id = #{topicId,jdbcType=INTEGER},
      commentor_id = #{commentorId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=BIGINT},
      gmt_modify = #{gmtModify,jdbcType=BIGINT},
      comment_count = #{commentCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="life.hblg.community.model.CommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="life.hblg.community.model.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>